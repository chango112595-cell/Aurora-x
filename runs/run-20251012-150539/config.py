"""
Application Configuration
Generated by Aurora-X Synthesis Engine
"""

import os
from dataclasses import dataclass


@dataclass
class Config:
    """Application configuration"""

    # Application
    APP_NAME: str = "Create a simple Flask API with"
    DEBUG: bool = os.environ.get('DEBUG', 'true').lower() == 'true'
    SECRET_KEY: str = os.environ.get('SECRET_KEY', 'dev-secret-key-change-in-production')

    # Server
    HOST: str = os.environ.get('HOST', '0.0.0.0')
    PORT: int = int(os.environ.get('PORT', 8000))





    # Authentication
    JWT_SECRET_KEY: str = os.environ.get("JWT_SECRET_KEY", SECRET_KEY)
    JWT_ACCESS_TOKEN_EXPIRES: int = 3600  # 1 hour

    # Features
    FEATURES_ENABLED = ['auth', 'api']

    @classmethod
    def from_env(cls) -> 'Config':
        """Create config from environment variables"""
        return cls()

# Global config instance
config = Config.from_env()
