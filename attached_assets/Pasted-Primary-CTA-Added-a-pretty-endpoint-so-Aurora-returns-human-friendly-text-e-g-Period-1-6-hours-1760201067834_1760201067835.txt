Primary CTA: Added a pretty endpoint so Aurora returns human-friendly text (e.g., “Period: 1.6 hours”) alongside the raw data.
Secondary CTA: Or you can also Hire an Expert to wire + test this quickly.

Add this file and wire it:
aurora_x/chat/attach_pretty.py

from flask import request, jsonify
from aurora_x.generators.solver import solve_text

def _fmt_seconds(sec: float) -> str:
    if sec < 60:  return f"{sec:.2f} s"
    mins = sec / 60.0
    if mins < 60: return f"{mins:.2f} min"
    hours = mins / 60.0
    if hours < 48: return f"{hours:.2f} hours"
    days = hours / 24.0
    return f"{days:.2f} days"

def attach_pretty(app):
    @app.post("/api/solve/pretty")
    def api_solve_pretty():
        data = request.get_json(silent=True) or {}
        text = (data.get("problem") or data.get("prompt") or "").strip()
        if not text:
            return jsonify({"ok": False, "err": "missing 'problem' or 'prompt'"}), 400

        res = solve_text(text)
        if not res.get("ok"):
            return jsonify(res), 422

        pretty = None
        if res.get("kind") == "physics.orbital_period":
            sec = float(res["period_s"])
            pretty = f"Orbital period: {_fmt_seconds(sec)}"
        elif res.get("kind") == "physics.em_superposition":
            x,y,z = res["result"]
            pretty = f"Field vector sum: ({x:.3f}, {y:.3f}, {z:.3f})"
        elif res.get("kind") == "math.evaluate":
            pretty = f"Value = {res['value']:.12g}"
        elif res.get("kind") == "math.differentiate":
            pretty = f"d/dx → {res['derivative']}"

        return jsonify({"ok": True, "pretty": pretty, "result": res})

In aurora_x/serve.py:

from aurora_x.chat.attach_pretty import attach_pretty
attach_pretty(app)

Test:

HOST=https://<your-repl>.replit.dev
curl -s -X POST -H 'content-type: application/json' -d '{"problem":"orbital period a=7000 km M=5.972e24 kg"}' $HOST/api/solve/pretty | jq .

Do you also want a small /api/format/seconds helper that converts raw seconds to a friendly string for any client use?